version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: uav_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: uav_exam_management
      MYSQL_USER: uav_user
      MYSQL_PASSWORD: uav_pass123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - uav_network

  redis:
    image: redis:7-alpine
    container_name: uav_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - uav_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: uav_backend
    environment:
      - MYSQL_SERVER=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=uav_user
      - MYSQL_PASSWORD=uav_pass123
      - MYSQL_DB=uav_exam_management
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    restart: unless-stopped
    networks:
      - uav_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: uav_frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - uav_network

  nginx:
    image: nginx:alpine
    container_name: uav_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - uav_network

volumes:
  mysql_data:
  redis_data:
  uploads_data:

networks:
  uav_network:
    driver: bridge